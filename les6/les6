USE vk;

-- 1)

CREATE TABLE likes(
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	user_id INT UNSIGNED NOT NULL,
	target_id INT UNSIGNED NOT NULL,
	target_type_id INT UNSIGNED NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);


SHOW TABLES;
DESCRIBE media_types;
SELECT * FROM media_types;
DESCRIBE media;
SELECT * FROM media;

CREATE TABLE target_types (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO target_types (name) VALUES 
  ('messages'),
  ('users'),
  ('media'),
  ('posts');
 
INSERT INTO likes 
  SELECT 
    id, 
    FLOOR(1 + (RAND() * 100)), 
    FLOOR(1 + (RAND() * 100)),
    FLOOR(1 + (RAND() * 4)),
    CURRENT_TIMESTAMP 
  FROM messages;

SELECT * FROM likes LIMIT 10;

CREATE TABLE posts (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNSIGNED NOT NULL,
  community_id INT UNSIGNED,
  head VARCHAR(255),
  body TEXT NOT NULL,
  media_id INT UNSIGNED,
  is_public BOOLEAN DEFAULT TRUE,
  is_archived BOOLEAN DEFAULT FALSE,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 2

ALTER TABLE profiles 
	ADD CONSTRAINT profiles_user_id_fk
		FOREIGN KEY (id) REFERENCES users(id)
	    	ON DELETE CASCADE;
			
SELECT * FROM profiles LIMIT 10;
SELECT * FROM users LIMIT 10;

DESC messages;

ALTER TABLE messages
	ADD CONSTRAINT messages_from_user_id_fk
		FOREIGN KEY (from_user_id) REFERENCES users(id)
	    	ON DELETE RESTRICT,
	ADD CONSTRAINT messages_to_user_id_fk
		FOREIGN KEY (to_user_id) REFERENCES users(id)
	    	ON DELETE RESTRICT;

SHOW TABLES;
DESC comunities_users;

ALTER TABLE comunities_users
	ADD CONSTRAINT comunities_users_user_id_fk
		FOREIGN KEY (user_id) REFERENCES users(id)
	    	ON DELETE RESTRICT;
	    	
SHOW TABLES;
DESC friendship_statuses;	  

ALTER TABLE friendship
	ADD CONSTRAINT friendship_user_id_fk
		FOREIGN KEY (user_id) REFERENCES users(id)
	    	ON DELETE RESTRICT,
	ADD CONSTRAINT friendship_friend_id_fk
		FOREIGN KEY (friend_id) REFERENCES users(id)
	    	ON DELETE RESTRICT;
	    
ALTER TABLE friendship
	ADD CONSTRAINT friendship_status_id_fk
		FOREIGN KEY (status_id) REFERENCES friendship_statuses(id)
	    	ON DELETE RESTRICT;   
	    
DESC likes;
DESC target_types;

ALTER TABLE likes
	ADD CONSTRAINT likes_target_type_id_fk
		FOREIGN KEY (target_type_id) REFERENCES target_types(id)
	    	ON DELETE RESTRICT;   
	    
DESC media;

ALTER TABLE media
	ADD CONSTRAINT media_user_id_fk
		FOREIGN KEY (user_id) REFERENCES users(id)
	    	ON DELETE RESTRICT,
	ADD CONSTRAINT media_media_type_id_fk
		FOREIGN KEY (media_type_id) REFERENCES media_types(id)
	    	ON DELETE RESTRICT;

SHOW TABLES;
DESC media_types;
DESC posts;

ALTER TABLE posts
	ADD CONSTRAINT posts_user_id_fk
		FOREIGN KEY (user_id) REFERENCES users(id)
	    	ON DELETE RESTRICT,
	ADD CONSTRAINT posts_community_id_fk
		FOREIGN KEY (community_id) REFERENCES comunities(id)
	    	ON DELETE RESTRICT,
	ADD CONSTRAINT posts_media_id_fk
		FOREIGN KEY (media_id) REFERENCES media(id)
	    	ON DELETE RESTRICT;

DESC users;

-- 3
SELECT * FROM profiles;
DESC profiles;
DESC likes;


(SELECT 
		COUNT(user_id) AS how_much_likes,
		'male' AS gen
	FROM 
		likes
	WHERE user_id IN 
		(SELECT id FROM profiles WHERE gender = 'm'))
UNION
(SELECT 
		COUNT(user_id) AS how_much_likes,
		'female' AS gen
	FROM 
		likes
	WHERE user_id IN 
		(SELECT id FROM profiles WHERE gender = 'f'))
	ORDER BY how_much_likes DESC LIMIT 1;

-- 4


DESC profiles;
DESC likes;

SELECT 
		COUNT(user_id),
		user_id
	FROM 
		likes
	GROUP BY 
		user_id;
	
	
-- DESC users;
DESC profiles;
DESC likes;

		
SELECT COUNT(*) FROM
		(SELECT 
		(SELECT COUNT(user_id) AS how_much_likes FROM likes WHERE likes.user_id = profiles.id)
	from profiles
		ORDER BY SUBSTRING(birthday, 1, 4) LIMIT 10) AS lk;

	
-- 5 Чем меньше лайков тем меньше активности
DESC posts;
DESC likes;

SELECT 
		CONCAT(first_name,' ',second_name) AS name,
		(SELECT 
			 COUNT(user_id) AS how_much_activity
		 FROM 
		 	 likes
		 WHERE user_id = users.id
	 	 GROUP BY 
		 	 user_id
		 ) AS lk
	FROM 
		users
	ORDER BY lk DESC LIMIT 10;

